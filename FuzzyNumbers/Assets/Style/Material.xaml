<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="ThemeColor" Color="#222222" />
    <SolidColorBrush x:Key="ThemeNavigation" Color="#1d1d1d" />
    <SolidColorBrush x:Key="ThemeForeground" Color="White" />
    <SolidColorBrush x:Key="ThemeDarkForeground" Color="#999999" />
    <SolidColorBrush x:Key="ThemeBorder" Color="#3f3f41" />
    <SolidColorBrush x:Key="ThemeElement" Color="#393939" />
    <SolidColorBrush x:Key="ThemeElementSelected" Color="#3f3f41" />
    <SolidColorBrush x:Key="ThemeElementHover" Color="#292929" />

    <SolidColorBrush x:Key="PaletteBlue" Color="#303f9f" />
    <SolidColorBrush x:Key="PaletteGray" Color="#bdbdbd" />
    <SolidColorBrush x:Key="PaletteGreen" Color="#00897b" />
    <SolidColorBrush x:Key="PaletteAmber" Color="#ffa000" />
    <SolidColorBrush x:Key="PaletteRed" Color="#c62828" />
    <SolidColorBrush x:Key="PalettePurple" Color="#673ab7" />

    <SolidColorBrush x:Key="DefaultAccent" Color="#51c066" />

    <!--  http://xtoolkit.github.io/Micon/icons/  -->
    <FontFamily x:Key="Micon">pack://application:,,,/Assets/Fonts/#micon_nb</FontFamily>

    <Style x:Key="MaterialButton" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="16,8" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource ThemeForeground}" />
        <Setter Property="Background" Value="{StaticResource ThemeElement}" />
        <Setter Property="BorderBrush" Value="#303030" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#202020" />
                <Setter Property="BorderBrush" Value="#515151" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource ThemeDarkForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MaterialIcon" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="FontFamily" Value="{StaticResource Micon}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
    </Style>

    <Style x:Key="MaterialTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource ThemeColor}" />
        <Setter Property="Foreground" Value="{StaticResource ThemeForeground}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorder}" />
        <Setter Property="Padding" Value="7" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource ThemeColor}" />
                <Setter Property="BorderBrush" Value="{StaticResource ThemeBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="MaterialTextBoxPlaceholder" TargetType="{x:Type TextBox}">
        <Grid>
            <TextBlock
                x:Name="wm"
                Margin="10,0"
                VerticalAlignment="Center"
                FontSize="13"
                Foreground="{StaticResource ThemeDarkForeground}"
                Text="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" />
            <TextBox Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialTextBox}" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="{StaticResource ThemeColor}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Value="">
                                <Setter Property="Background" Value="Transparent" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                                <Setter Property="Background" Value="Transparent" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">

                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MaterialScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Width="10" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="0"
                            Focusable="false"
                            IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb
                                    x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageUp"
                                    Command="ScrollBar.PageDownCommand"
                                    Focusable="false"
                                    Opacity="0" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageDown"
                                    Command="ScrollBar.PageUpCommand"
                                    Focusable="false"
                                    Opacity="0" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Border
                            Width="Auto"
                            Height="Auto"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{StaticResource ThemeElement}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialScroll" TargetType="{x:Type ScrollViewer}">
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
        <Style.Resources>
            <Style BasedOn="{StaticResource MaterialScrollBar}" TargetType="{x:Type ScrollBar}" />
            <Style BasedOn="{StaticResource MaterialThumb}" TargetType="{x:Type Thumb}" />
        </Style.Resources>
    </Style>

    <!--  Window Navigation  -->
    <Style x:Key="CaptionButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        x:Name="LayoutRoot"
                        Width="44"
                        Height="30"
                        Background="{StaticResource ThemeColor}">
                        <TextBlock
                            x:Name="txt"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource Micon}"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="#999999"
                            RenderOptions.ClearTypeHint="Auto"
                            Text="{TemplateBinding Content}"
                            TextOptions.TextFormattingMode="Display"
                            TextOptions.TextRenderingMode="Aliased" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{StaticResource ThemeElementHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="MinimizeButton"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEDBE;" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style
        x:Key="MaximizeButton"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEADE;" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style
        x:Key="RestoreButton"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEAE2;" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style
        x:Key="CloseButton"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Content" Value="&#xEADA;" />
        <Setter Property="FontSize" Value="10" />
    </Style>

</ResourceDictionary>